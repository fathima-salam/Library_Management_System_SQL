<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Orders Management - LibraryMS</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #2c2c2c 0%, #1a1a1a 100%);
            min-height: 100vh;
            color: #e0e0e0;
        }

        .container {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar Navigation */
        .sidebar {
            width: 250px;
            background: rgba(20, 20, 20, 0.95);
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
            border-right: 1px solid rgba(100, 100, 100, 0.3);
            padding: 2rem 0;
            position: fixed;
            height: 100vh;
            z-index: 100;
        }

        .logo {
            text-align: center;
            margin-bottom: 3rem;
            padding: 0 1.5rem;
        }

        .logo h1 {
            background: linear-gradient(135deg, #ffffff, #cccccc);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-size: 1.5rem;
            font-weight: 700;
        }

        .nav-menu {
            list-style: none;
            padding: 0 1rem;
        }

        .nav-item {
            margin-bottom: 0.5rem;
        }

        .nav-link {
            display: flex;
            align-items: center;
            padding: 1rem 1.5rem;
            text-decoration: none;
            color: #cccccc;
            border-radius: 12px;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .nav-link:hover {
            background: linear-gradient(135deg, #444444, #222222);
            color: white;
            transform: translateX(5px);
        }

        .nav-link.active {
            background: linear-gradient(135deg, #555555, #333333);
            color: white;
        }

        .nav-link.logout {
            background: linear-gradient(135deg, #666666, #333333);
            color: white;
            margin-top: 2rem;
        }

        .nav-link.logout:hover {
            transform: translateX(5px) scale(1.02);
            box-shadow: 0 5px 15px rgba(100, 100, 100, 0.3);
        }

        .nav-icon {
            margin-right: 0.75rem;
            font-size: 1.2rem;
        }

        /* Main Content */
        .main-content {
            margin-left: 250px;
            flex: 1;
            padding: 2rem;
            overflow-y: auto;
        }

        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            background: rgba(30, 30, 30, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            padding: 1.5rem 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(100, 100, 100, 0.2);
        }

        .page-title {
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(135deg, #ffffff, #cccccc);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .add-order-btn {
            background: linear-gradient(135deg, #555555, #333333);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 12px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .add-order-btn:hover {
            background: linear-gradient(135deg, #666666, #444444);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4);
        }

        /* Table Styles */
        .table-container {
            background: rgba(30, 30, 30, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            overflow: hidden;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(100, 100, 100, 0.2);
        }

        .orders-table {
            width: 100%;
            border-collapse: collapse;
        }

        .orders-table th {
            background: rgba(40, 40, 40, 0.9);
            color: #ffffff;
            padding: 1.25rem 1rem;
            text-align: left;
            font-weight: 600;
            font-size: 0.95rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            border-bottom: 2px solid rgba(100, 100, 100, 0.3);
        }

        .orders-table td {
            padding: 1rem;
            border-bottom: 1px solid rgba(100, 100, 100, 0.1);
            color: #cccccc;
        }

        .orders-table tr:hover {
            background: rgba(50, 50, 50, 0.5);
        }

        .borrow-id {
            font-weight: 600;
            color: #ffffff;
        }

        .status-badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 600;
            text-transform: uppercase;
        }

        .borrowed {
            background: rgba(255, 193, 7, 0.2);
            color: #ffd700;
            border: 1px solid rgba(255, 193, 7, 0.3);
        }

        .returned {
            background: rgba(100, 200, 100, 0.2);
            color: #90EE90;
            border: 1px solid rgba(100, 200, 100, 0.3);
        }

        /* No Data State */
        .no-data-container {
            text-align: center;
            padding: 4rem 2rem;
            color: #888;
        }

        .no-data-icon {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

        .no-data-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: #aaa;
        }

        .no-data-message {
            font-size: 1rem;
            opacity: 0.7;
            margin-bottom: 2rem;
        }

        .no-data-btn {
            background: linear-gradient(135deg, #555555, #333333);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 12px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .no-data-btn:hover {
            background: linear-gradient(135deg, #666666, #444444);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4);
        }

        /* Action Buttons */
        .action-buttons {
            display: flex;
            gap: 0.5rem;
        }

        .btn {
            padding: 6px 12px;
            border: none;
            border-radius: 8px;
            font-size: 0.85rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
        }

        .btn-edit {
            background: rgba(100, 150, 200, 0.8);
            color: white;
        }

        .btn-edit:hover {
            background: rgba(120, 170, 220, 1);
            transform: translateY(-1px);
        }

        .btn-return {
            background: rgba(100, 200, 100, 0.8);
            color: white;
        }

        .btn-return:hover {
            background: rgba(120, 220, 120, 1);
            transform: translateY(-1px);
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background: rgba(30, 30, 30, 0.98);
            margin: 5% auto;
            padding: 2rem;
            border-radius: 16px;
            width: 500px;
            max-width: 90%;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
            border: 1px solid rgba(100, 100, 100, 0.3);
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .modal-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: #ffffff;
        }

        .close {
            color: #aaa;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover {
            color: #fff;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            color: #cccccc;
            font-weight: 600;
        }

        .form-input, .form-select {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid rgba(100, 100, 100, 0.3);
            border-radius: 8px;
            background: rgba(40, 40, 40, 0.8);
            color: #ffffff;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        .form-select {
            cursor: pointer;
        }

        .form-select option {
            background: rgba(40, 40, 40, 0.95);
            color: #ffffff;
            padding: 0.5rem;
        }

        .form-input:focus, .form-select:focus {
            outline: none;
            border-color: rgba(150, 150, 150, 0.6);
            box-shadow: 0 0 0 2px rgba(150, 150, 150, 0.1);
        }

        .form-input:disabled {
            background: rgba(60, 60, 60, 0.5);
            color: #999;
            cursor: not-allowed;
        }

        .form-buttons {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
            margin-top: 2rem;
        }

        .btn-primary {
            background: linear-gradient(135deg, #555555, #333333);
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            background: linear-gradient(135deg, #666666, #444444);
            transform: translateY(-1px);
        }

        .btn-secondary {
            background: rgba(100, 100, 100, 0.3);
            color: #cccccc;
            padding: 10px 20px;
            border: 1px solid rgba(100, 100, 100, 0.4);
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-secondary:hover {
            background: rgba(120, 120, 120, 0.4);
        }

        @media (max-width: 768px) {
            .sidebar {
                width: 200px;
            }
            
            .main-content {
                margin-left: 200px;
                padding: 1rem;
            }
            
            .page-header {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }
            
            .orders-table {
                font-size: 0.85rem;
            }
            
            .orders-table th,
            .orders-table td {
                padding: 0.75rem 0.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Sidebar Navigation -->
        <nav class="sidebar">
            <div class="logo">
                <h1>📖 LibraryMS</h1>
            </div>
            <ul class="nav-menu">
                <li class="nav-item">
                    <a href="/books" class="nav-link">
                        <span class="nav-icon">📚</span>
                        BOOKS
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/orders" class="nav-link active">
                        <span class="nav-icon">📋</span>
                        ORDERS
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/users" class="nav-link">
                        <span class="nav-icon">👥</span>
                        USERS
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/logout" class="nav-link logout">
                        <span class="nav-icon">🚪</span>
                        LOGOUT
                    </a>
                </li>
            </ul>
        </nav>

        <!-- Main Content -->
        <main class="main-content">
            <div class="page-header">
                <h1 class="page-title">Orders Management</h1>
                <button class="add-order-btn" onclick="openAddModal()">
                    <span>➕</span>
                    New Borrowing
                </button>
            </div>

            <div class="table-container">
                <% if (orders && orders.length > 0) { %>
                    <table class="orders-table">
                        <thead>
                            <tr>
                                <th>Borrow ID</th>
                                <th>User ID</th>
                                <th>Book ID</th>
                                <th>Book Title</th>
                                <th>Borrow Date</th>
                                <th>Return Date</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="ordersTableBody">
                            <% orders.forEach(function(order) { %>
                                <tr>
                                    <td class="borrow-id"><%= order.borrow_id %></td>
                                    <td><%= order.user_id %></td>
                                    <td><%= order.book_id %></td>
                                    <td><%= order.book_title || 'N/A' %></td>
                                    <td><%= new Date(order.borrow_date).toLocaleDateString() %></td>
                                    <td>
                                        <%= order.return_date ? new Date(order.return_date).toLocaleDateString() : 'Not Returned' %>
                                    </td>
                                    <td>
                                        <span class="status-badge <%= order.return_date ? 'returned' : 'borrowed' %>">
                                            <%= order.return_date ? 'Returned' : 'Borrowed' %>
                                        </span>
                                    </td>
                                    <td>
                                        <div class="action-buttons">
                                            <button class="btn btn-edit" onclick="openEditModal('<%= order.borrow_id %>')">
                                                ✏️ Edit
                                            </button>
                                            <% if (!order.return_date) { %>
                                                <button class="btn btn-return" onclick="returnBook('<%= order.borrow_id %>')">
                                                    ↩️ Return
                                                </button>
                                            <% } %>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                <% } else { %>
                    <div class="no-data-container">
                        <div class="no-data-icon">📋</div>
                        <h3 class="no-data-title">No Orders Found</h3>
                        <p class="no-data-message">
                            No borrowing records available. Start by creating a new borrowing order.
                        </p>
                        <button class="no-data-btn" onclick="openAddModal()">
                            <span>➕</span>
                            Create First Order
                        </button>
                    </div>
                <% } %>
            </div>
        </main>
    </div>

    <!-- Add Order Modal -->
    <div id="addOrderModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">New Borrowing Order</h2>
                <span class="close" onclick="closeAddModal()">&times;</span>
            </div>
            <form id="addOrderForm" action="/orders" method="POST">
                <div class="form-group">
                    <label for="addUserId" class="form-label">Select User</label>
                    <select id="addUserId" name="userId" class="form-select" required>
                        <option value="">Choose a user...</option>
                        <% if (users && users.length > 0) { %>
                            <% users.forEach(function(user) { %>
                                <option value="<%= user.user_id %>">
                                    <%= user.user_id %> - <%= user.name %>
                                </option>
                            <% }); %>
                        <% } %>
                    </select>
                </div>
                <div class="form-group">
                    <label for="addBookId" class="form-label">Select Book</label>
                    <select id="addBookId" name="bookId" class="form-select" required>
                        <option value="">Choose a book...</option>
                        <% if (books && books.length > 0) { %>
                            <% books.forEach(function(book) { %>
                                <% if (book.quantity > 0) { %>
                                    <option value="<%= book.book_id %>">
                                        <%= book.book_id %> - <%= book.title %> (Available: <%= book.quantity %>)
                                    </option>
                                <% } %>
                            <% }); %>
                        <% } %>
                    </select>
                </div>
                <div class="form-group">
                    <label for="addBorrowDate" class="form-label">Borrow Date</label>
                    <input type="date" id="addBorrowDate" name="borrowDate" class="form-input" required>
                </div>
                <div class="form-buttons">
                    <button type="button" class="btn-secondary" onclick="closeAddModal()">Cancel</button>
                    <button type="submit" class="btn-primary">Create Order</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Edit Order Modal -->
    <div id="editOrderModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Edit Borrowing Order</h2>
                <span class="close" onclick="closeEditModal()">&times;</span>
            </div>
            <form id="editOrderForm" method="POST">
                <input type="hidden" name="_method" value="PUT">
                <input type="hidden" id="editBorrowId" name="borrowId" value="">
                
                <div class="form-group">
                    <label for="editUserId" class="form-label">Select User</label>
                    <select id="editUserId" name="userId" class="form-select" required>
                        <option value="">Choose a user...</option>
                        <% if (users && users.length > 0) { %>
                            <% users.forEach(function(user) { %>
                                <option value="<%= user.user_id %>">
                                    <%= user.user_id %> - <%= user.name %>
                                </option>
                            <% }); %>
                        <% } %>
                    </select>
                </div>
                <div class="form-group">
                    <label for="editBookId" class="form-label">Select Book</label>
                    <select id="editBookId" name="bookId" class="form-select" required>
                        <option value="">Choose a book...</option>
                        <% if (books && books.length > 0) { %>
                            <% books.forEach(function(book) { %>
                                <option value="<%= book.book_id %>">
                                    <%= book.book_id %> - <%= book.title %> (Available: <%= book.quantity %>)
                                </option>
                            <% }); %>
                        <% } %>
                    </select>
                </div>
                <div class="form-group">
                    <label for="editBorrowDate" class="form-label">Borrow Date</label>
                    <input type="date" id="editBorrowDate" name="borrowDate" class="form-input" required>
                </div>
                <div class="form-group">
                    <label for="editReturnDate" class="form-label">Return Date (Optional)</label>
                    <input type="date" id="editReturnDate" name="returnDate" class="form-input">
                </div>
                <div class="form-buttons">
                    <button type="button" class="btn-secondary" onclick="closeEditModal()">Cancel</button>
                    <button type="submit" class="btn-primary">Update Order</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Convert server data to JavaScript
        <% if (orders && orders.length > 0) { %>
            let orders = <%- JSON.stringify(orders) %>;
        <% } else { %>
            let orders = [];
        <% } %>

        <% if (users && users.length > 0) { %>
            let users = <%- JSON.stringify(users) %>;
        <% } else { %>
            let users = [];
        <% } %>

        <% if (books && books.length > 0) { %>
            let books = <%- JSON.stringify(books) %>;
        <% } else { %>
            let books = [];
        <% } %>

        // Set today's date as default for borrow date
        function setTodayDate() {
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('addBorrowDate').value = today;
        }

        // Add Order Modal Functions
        function openAddModal() {
            document.getElementById('addOrderForm').reset();
            setTodayDate();
            document.getElementById('addOrderModal').style.display = 'block';
        }

        function closeAddModal() {
            document.getElementById('addOrderModal').style.display = 'none';
            document.getElementById('addOrderForm').reset();
        }

        // Edit Order Modal Functions
        function openEditModal(borrowId) {
            const order = orders.find(o => String(o.borrow_id) === String(borrowId));
            
            if (order) {
                document.getElementById('editOrderForm').action = '/orders/' + encodeURIComponent(borrowId) + '/edit';
                document.getElementById('editBorrowId').value = borrowId;
                document.getElementById('editUserId').value = order.user_id;
                document.getElementById('editBookId').value = order.book_id;
                
                // Format dates for input fields
                const borrowDate = new Date(order.borrow_date).toISOString().split('T')[0];
                document.getElementById('editBorrowDate').value = borrowDate;
                
                if (order.return_date) {
                    const returnDate = new Date(order.return_date).toISOString().split('T')[0];
                    document.getElementById('editReturnDate').value = returnDate;
                }
                
                document.getElementById('editOrderModal').style.display = 'block';
            } else {
                console.error('Order not found:', borrowId);
                alert('Order not found!');
            }
        }

        function closeEditModal() {
            document.getElementById('editOrderModal').style.display = 'none';
            document.getElementById('editOrderForm').reset();
        }

        // Return Book Function
        function returnBook(borrowId) {
            if (confirm('Mark this book as returned?')) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '/orders/' + encodeURIComponent(borrowId) + '/return';

                const methodInput = document.createElement('input');
                methodInput.type = 'hidden';
                methodInput.name = '_method';
                methodInput.value = 'PUT';

                form.appendChild(methodInput);
                document.body.appendChild(form);
                form.submit();
            }
        }

        // Form Submission Event Listeners
        document.getElementById('addOrderForm').addEventListener('submit', function(e) {
            console.log('Add form submitting to:', this.action);
        });

        document.getElementById('editOrderForm').addEventListener('submit', function(e) {
            console.log('Edit form submitting to:', this.action);
        });

        // Close modals when clicking outside
        window.onclick = function(event) {
            const addModal = document.getElementById('addOrderModal');
            const editModal = document.getElementById('editOrderModal');
            
            if (event.target === addModal) {
                closeAddModal();
            }
            if (event.target === editModal) {
                closeEditModal();
            }
        };

        // Close modals with Escape key
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                closeAddModal();
                closeEditModal();
            }
        });

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            setTodayDate();
        });
    </script>
</body>
</html>